{"version":3,"sources":["routes/index.js","store/Init.js","reducers/index.js","store/index.js","store/localStorage.js","components/helpers/Calc.js","components/atoms/Button/Button.js","components/atoms/List/Param.js","components/organisms/Nav.js","templates/GlobalStyle.js","components/helpers/Notification.js","actions/index.js","templates/MainTemplate.js","components/atoms/List/ListItem.js","components/molecules/MainList.js","views/Pantry.js","views/ShoppingList.js","views/Settings.js","templates/CrudTemplate.js","components/atoms/Input/Input.js","components/atoms/Select/Select.js","views/EditPage.js","views/DeletePage.js","views/AddPage.js","components/Root.js","index.js"],"names":["routes","Init","data","id","name","quantity","category","limit","j","notification","isOpen","day","rootReducer","state","type","payload","filter","item","length","map","idx","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","composeWithDevTools","subscribe","stringify","setItem","saveState","getState","remCalc","px","emCalc","Button","styled","button","width","secondary","css","Param","div","MenuWrapper","Icon","FontAwesomeIcon","HeaderTitle","h2","Menu","Item","Add","Nav","icon","faThList","size","as","Link","to","faPlus","Main","createGlobalStyle","Alert","Notification","pushNotification","changeNotification","props","today","Date","tomorrow","newDay","setDate","getDate","getDay","setInterval","this","onClick","Component","connect","dispatch","changeNotificationAction","MainWrapper","MainTemplate","children","GlobalStyle","ListItem","li","ListWrapper","ul","Action","Trigger","MainList","page","index","key","className","toUpperCase","defaultProps","PropTypes","arrayOf","shape","ShoppingList","limits","setState","Settings","faCogs","CrudWrapper","CrudTemplate","Input","input","SelectWrapper","select","predefinedOptions","Select","options","values","handleChange","handleBlur","value","onChange","onBlur","label","InputAddItem","Back","FormWrapper","Form","SubmitWrapper","Submit","Hiden","EditPage","limited","limitedRes","redirectToPantry","initValues","match","path","Number","handleRedirect","params","pantryRes","splice","editItem","faEdit","enableReinitialize","initialValues","onSubmit","setSubmitting","isSubmitting","disabled","required","faArrowLeft","editItemAction","DeletePage","removeItem","faTrashAlt","removeItemAction","Center","AddPage","addItem","faFolderPlus","placeholder","addItemAction","App","exact","render","component","Pantry","ReactDOM","StrictMode","Root","document","getElementById"],"mappings":"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","file":"static/js/main.414543a5.chunk.js","sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const routes = {\n  home: '/',\n  pantry: '/pantry',\n  pantryEdit: '/pantry/edit/:id',\n  pantryDelete: '/pantry/delete/:id',\n  shoppingList: '/shopping-list',\n  shoppingListEdit: '/shopping-list/edit/:id',\n  shoppingListDelete: '/shopping-list/delete/:id',\n  add: '/add',\n  settings: '/settings',\n};\n","const Init = {\n  data: [\n    { id: 0, name: 'ciasto czekoladowe', quantity: 200, category: 'desserts', limit: 40, j: 'kg' },\n    { id: 1, name: 'ciasto orzechowe', quantity: 200, category: 'desserts', limit: 40, j: 'kg' },\n    { id: 2, name: 'salami', quantity: 22, category: 'meat', limit: 40, j: 'kg' },\n    { id: 3, name: 'biała kiełbasa', quantity: 22, category: 'meat', limit: 40, j: 'kg' },\n    { id: 4, name: 'mleko', quantity: 33, category: 'dairy_products', limit: 33, j: 'kg' },\n    { id: 5, name: 'jaja', quantity: 33, category: 'dairy_products', limit: 33, j: 'kg' },\n    { id: 6, name: 'masło', quantity: 33, category: 'dairy_products', limit: 40, j: 'kg' },\n    { id: 7, name: 'chleb żytni', quantity: 33, category: 'breads', limit: 40, j: 'kg' },\n    { id: 8, name: 'bułki', quantity: 2, category: 'breads', limit: 40, j: 'kg' },\n    { id: 9, name: 'bagietka', quantity: 33, category: 'breads', limit: 40, j: 'kg' },\n    { id: 10, name: 'curry', quantity: 33, category: 'spices', limit: 45, j: 'kg' },\n    { id: 11, name: 'pieprz', quantity: 10, category: 'spices', limit: 40, j: 'kg' },\n    { id: 12, name: 'sól', quantity: 33, category: 'spices', limit: 40, j: 'kg' },\n    { id: 13, name: 'banany', quantity: 33, category: 'fruits', limit: 38, j: 'kg' },\n    { id: 14, name: 'cytryna', quantity: 33, category: 'fruits', limit: 40, j: 'kg' },\n    { id: 15, name: 'jabłka', quantity: 33, category: 'fruits', limit: 40, j: 'kg' },\n    { id: 16, name: 'ziemniaki', quantity: 33, category: 'vegetables', limit: 40, j: 'kg' },\n    { id: 17, name: 'marchew', quantity: 43, category: 'vegetables', limit: 40, j: 'kg' },\n    { id: 18, name: 'ogórki', quantity: 15, category: 'vegetables', limit: 40, j: 'kg' },\n  ],\n  notification: { isOpen: true, day: 3 },\n};\n\nexport default Init;\n","import Init from 'store/Init';\n\nconst rootReducer = (state = Init, { type, payload }) => {\n  switch (type) {\n    case 'REMOVE_ITEM':\n      return {\n        ...state,\n        data: [\n          ...state.data.filter((item) => {\n            return item.id !== payload;\n          }),\n        ],\n      };\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        data: [...state.data, { id: state.data.length, ...payload }],\n      };\n    case 'EDIT_ITEM':\n      return {\n        ...state,\n        data: [...state.data.map((item, idx) => (idx === payload.id ? payload : item))],\n      };\n    case 'NOTIFICATION':\n      return {\n        ...state,\n        notification: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from 'reducers';\nimport { loadState, saveState } from 'store/localStorage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, composeWithDevTools());\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    // Ignore\n  }\n};\n","export const remCalc = (px) => {\n  return `${px / 16}rem`;\n};\nexport const emCalc = (px) => `${px / 16}em`;\n\n// `${px / parseFloat(getComputedStyle(document.documentElement).fontSize)}rem`;\n","import styled, { css } from 'styled-components';\nimport { remCalc, emCalc } from 'components/helpers/Calc';\n\nconst Button = styled.button`\n  padding: 0;\n  background-color: #e6e6e6;\n  /* width: ${({ width }) => remCalc(width) || remCalc(200)}; */\n  width: ${remCalc(105)};\n  height: ${remCalc(30)};\n  border: none;\n  border-radius: ${remCalc(50)};\n  font-family: 'Montserrat';\n  font-weight: 600;\n  font-size: ${emCalc(10)};\n  text-transform: uppercase;\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      background-color: #ffd82b;\n      width: ${remCalc(105)};\n      height: ${remCalc(30)};\n      font-size: ${emCalc(10)};\n    `}\n`;\n\nexport default Button;\n","import styled from 'styled-components';\nimport { remCalc } from 'components/helpers/Calc';\n\nconst Param = styled.div`\n  line-height: ${remCalc(60)};\n`;\n\nexport default Param;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'components/atoms/Button/Button';\nimport styled from 'styled-components';\nimport Param from 'components/atoms/List/Param';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faThList } from '@fortawesome/free-solid-svg-icons';\n\nconst MenuWrapper = styled.div`\n  max-height: 90px;\n  max-width: 1024px;\n  margin: 0 auto;\n  background-color: #ffd82b;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  padding: 10px 20px;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  display: grid;\n  grid-template-columns: 185px auto 50px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 6px;\n`;\n\nconst HeaderTitle = styled.h2`\n  margin: 0;\n  align-self: center;\n`;\n\nconst Menu = styled.div`\n  @media (max-width: 580px) {\n    display: grid;\n    grid-template-rows: 1fr 1fr 1fr;\n  }\n`;\n\nconst Item = styled(Param)`\n  padding: 10px 20px;\n  color: black;\n  &:first-child {\n    padding-left: 0;\n  }\n  @media (max-width: 580px) {\n    padding: 0;\n    margin: 0;\n    height: auto;\n    line-height: 20px;\n  }\n`;\n\nconst Add = styled(Button)`\n  justify-self: right;\n  align-self: center;\n  width: 50px;\n  height: 50px;\n  line-height: 57px;\n  font-weight: 300;\n  border-radius: 50%;\n`;\n\nconst Nav = () => {\n  return (\n    <MenuWrapper>\n      <HeaderTitle>\n        <Icon icon={faThList} size=\"1x\" /> PantryApp\n      </HeaderTitle>\n      <Menu>\n        <Item as={Link} to=\"/pantry\">\n          Pantry\n        </Item>\n        <Item as={Link} to=\"/shopping-list\">\n          Shopping List\n        </Item>\n        <Item as={Link} to=\"/settings\">\n          Settings\n        </Item>\n      </Menu>\n      <Add as={Link} to=\"/add\">\n        <FontAwesomeIcon icon={faPlus} size=\"2x\" />\n      </Add>\n    </MenuWrapper>\n  );\n};\n\nexport default Nav;\n","import { createGlobalStyle } from 'styled-components';\n\nconst Main = createGlobalStyle`\n  \n  *, *::before, *::after {\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  \n  html {\n    font-size: 62.5%; \n  }\n  \n  body {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    font-family: \"Montserrat\", sans-serif;\n  }\n  li {\n    list-style: none;\n  }\n  select {\n  -webkit-appearance: none;\n  background: transparent;\n}\n\nselect:-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n}\n  div {\n    margin: 0;\n    padding: 0;\n  }\n\n  button, a {\n  display: inline-block;\n  appearance: none;\n  margin: 10px 0;\n  padding: 0px;\n  height: 50px;\n  border-width: 0;\n  color: #000;\n  font-family: sans-serif;\n  text-decoration: none;\n  line-height: 22px;\n  text-align: center;\n  cursor: pointer;\n\n}\n`;\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeNotification as changeNotificationAction } from 'actions';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Button from 'components/atoms/Button/Button';\n\nconst Alert = styled.div`\n  position: fixed;\n  left: 50%;\n  -webkit-transform: translateX(-50%);\n  transform: translateX(-50%);\n  bottom: 10px;\n  padding: 5px 10px;\n  border-radius: 8px;\n  border: 2px dashed black;\n  background-color: #ffd82a;\n`;\n\nclass Notification extends Component {\n  componentDidMount() {\n    setInterval(() => {\n      const { changeNotification, notification } = this.props;\n      const date = new Date();\n\n      if (date.getDay() === notification.day) {\n        changeNotification({ isOpen: true, day: notification.day });\n      }\n    }, 300000);\n  }\n\n  pushNotification = () => {\n    const { changeNotification } = this.props;\n\n    const today = new Date();\n    const tomorrow = new Date(today);\n    const newDay = tomorrow.setDate(tomorrow.getDate() + 3);\n    const update = new Date(newDay);\n    const res = update.getDay();\n\n    changeNotification({ isOpen: false, day: res });\n  };\n\n  render() {\n    const { notification } = this.props;\n\n    return (\n      <>\n        {notification.isOpen && (\n          <Alert>\n            When was the last time you updated the state?{' '}\n            <Button type=\"button\" onClick={this.pushNotification}>\n              close\n            </Button>\n          </Alert>\n        )}\n      </>\n    );\n  }\n}\n\nNotification.propTypes = {\n  notification: PropTypes.shape({ isOpen: PropTypes.bool, day: PropTypes.number }).isRequired,\n  changeNotification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ notification }) => ({ notification });\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeNotification: (notification) => dispatch(changeNotificationAction(notification)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\n","export const removeItem = (id) => {\n  return {\n    type: 'REMOVE_ITEM',\n    payload: id,\n  };\n};\n\nexport const addItem = (item) => {\n  return {\n    type: 'ADD_ITEM',\n    payload: item,\n  };\n};\n\nexport const editItem = (item) => {\n  return {\n    type: 'EDIT_ITEM',\n    payload: item,\n  };\n};\n\nexport const changeNotification = (notification) => {\n  return {\n    type: 'NOTIFICATION',\n    payload: notification,\n  };\n};\n","import React from 'react';\nimport Nav from 'components/organisms/Nav';\nimport GlobalStyle from 'templates/GlobalStyle';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Notification from 'components/helpers/Notification';\n\nconst MainWrapper = styled.div`\n  max-width: 1024px;\n  padding: 0;\n  margin: 0 auto;\n  margin-top: 96px;\n`;\n\nconst MainTemplate = ({ children }) => {\n  return (\n    <MainWrapper>\n      <GlobalStyle />\n      <Nav />\n      {children}\n      <Notification />\n    </MainWrapper>\n  );\n};\n\nMainTemplate.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default MainTemplate;\n","import styled from 'styled-components';\nimport { remCalc } from 'components/helpers/Calc';\n\nconst ListItem = styled.li`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr 1fr 1fr;\n  border: ${remCalc(1)} solid #e6e6e6;\n  border-radius: ${remCalc(8)};\n  margin: ${remCalc(10)};\n  padding: ${remCalc(10)} ${remCalc(20)};\n  transition: background-color 0.2s;\n  transition: border-color 0.2s;\n  @media (max-width: 999px) {\n    display: grid;\n    grid-template-rows: repeat(5, 1fr);\n    grid-template-columns: inherit;\n  }\n\n  &:hover {\n    background-color: #f1f1f1;\n    transition: background-color 1s;\n    transition: border-color 1.8s;\n    border: ${remCalc(1)} solid #5f5f5f;\n  }\n  &:nth-child(2n + 1) {\n    background-color: #f7f7f7;\n    &:hover {\n      background-color: #f1f1f1;\n      transition: background-color 1s;\n      transition: border-color 1.8s;\n      border: ${remCalc(1)} solid #5f5f5f;\n    }\n  }\n`;\n\nexport default ListItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from 'components/atoms/Button/Button';\nimport Param from 'components/atoms/List/Param';\nimport ListItem from 'components/atoms/List/ListItem';\nimport PropTypes from 'prop-types';\n\nconst ListWrapper = styled.ul`\n  max-width: 1024px;\n  padding: 0;\n  margin: 0 auto;\n  margin-top: 76px;\n`;\n\nconst Action = styled(Param)`\n  justify-self: right;\n  align-self: center;\n`;\n\nconst Trigger = styled(Button)`\n  line-height: 20px;\n  &:first-child {\n    margin-right: 6px;\n  }\n`;\n\nconst MainList = ({ data, page }) => (\n  <ListWrapper>\n    {data.map((item, index) => {\n      const { name, quantity, category, limit, j } = item;\n      return (\n        <ListItem key={name}>\n          <Param className=\"red\">\n            <strong>Name: </strong>\n            {name.toUpperCase()}\n          </Param>\n          <Param>\n            <strong> Quantity: </strong>\n            {quantity}\n            {j}\n          </Param>\n          <Param>\n            <strong> Category: </strong>\n            {category.toUpperCase()}\n          </Param>\n          <Param>\n            <strong> Limit: </strong>\n            {limit}\n            {j}\n          </Param>\n          <Action>\n            <Trigger\n              as={Link}\n              to={`${page}/delete/${page === 'pantry' ? item.id : index}`}\n              secondary={1}\n            >\n              Remove\n            </Trigger>\n            <Trigger as={Link} to={`${page}/edit/${page === 'pantry' ? item.id : index}`}>\n              Edit\n            </Trigger>\n          </Action>\n        </ListItem>\n      );\n    })}\n  </ListWrapper>\n);\n\nMainList.defaultProps = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: 'name',\n      quantity: 0,\n      category: 'category',\n      limit: 0,\n    }),\n  ),\n  page: '404',\n};\n\nMainList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      category: PropTypes.string,\n      limit: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    }),\n  ),\n  page: PropTypes.string,\n};\n\nexport default MainList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport MainList from 'components/molecules/MainList';\nimport PropTypes from 'prop-types';\n\nconst Pantry = ({ data }) => {\n  return (\n    <>\n      <MainList data={data} page=\"pantry\" />\n    </>\n  );\n};\n\nconst mapStateToProps = ({ data }) => ({ data });\n\nPantry.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      category: PropTypes.string,\n      limit: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    }),\n  ).isRequired,\n};\n\nexport default connect(mapStateToProps)(Pantry);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MainList from 'components/molecules/MainList';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n  state = {\n    data: '',\n    limits: [],\n  };\n\n  componentDidMount() {\n    const { data } = this.props;\n    this.setState({ data }, () => {\n      const { data: dataState } = this.state;\n      const limits = dataState.filter((item) => item.quantity < item.limit / 2);\n      this.setState({ limits });\n    });\n  }\n\n  render() {\n    const { limits } = this.state;\n    return <MainList data={limits} page=\"shopping-list\" />;\n  }\n}\n\nconst mapStateToProps = ({ data }) => ({ data });\n\nShoppingList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      category: PropTypes.string,\n      limit: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    }),\n  ).isRequired,\n};\n\nexport default connect(mapStateToProps)(ShoppingList);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs } from '@fortawesome/free-solid-svg-icons';\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 6px;\n`;\n\nconst HeaderTitle = styled.h2`\n  margin: 0;\n  margin-top: 108px;\n  margin-left: 18px;\n  align-self: center;\n`;\n\nconst Settings = () => {\n  return (\n    <>\n      <HeaderTitle>\n        <Icon icon={faCogs} size=\"1x\" /> Settings\n      </HeaderTitle>\n    </>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst CrudWrapper = styled.div`\n  max-width: 600px;\n  padding: 0 20px;\n  margin: 0 auto;\n  margin-top: 96px;\n`;\n\nconst CrudTemplate = ({ children }) => {\n  return <CrudWrapper>{children}</CrudWrapper>;\n};\n\nCrudTemplate.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.string])\n    .isRequired,\n};\n\nexport default CrudTemplate;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  padding: 15px 30px;\n  font-size: 16px;\n  font-weight: 600;\n  background-color: #e6e6e6;\n  border: none;\n  border-radius: 50px;\n  outline: none;\n  ::placeholder {\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    color: gray;\n  }\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst SelectWrapper = styled.select`\n  margin-top: 6px;\n  margin-bottom: 2px;\n  padding: 15px 30px;\n  font-size: 16px;\n  font-weight: 600;\n  background-color: #e6e6e6;\n  border: none;\n  border-radius: 50px;\n  outline: none;\n  ::placeholder {\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    color: gray;\n  }\n`;\n\nconst predefinedOptions = ['kg', 'g', 'l', 'szt'];\n\nconst Select = ({ options = predefinedOptions, name, values, handleChange, handleBlur }) => {\n  return (\n    <SelectWrapper name={name} value={values} onChange={handleChange} onBlur={handleBlur}>\n      {options.map((item) => {\n        return (\n          <option key={item} value={item} label={item}>\n            {item}\n          </option>\n        );\n      })}\n    </SelectWrapper>\n  );\n};\nSelect.defaultProps = {\n  options: predefinedOptions,\n  name: 'name',\n  values: 'value',\n  handleChange: () => 'onChange',\n  handleBlur: () => 'handleBlur',\n};\n\nSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  name: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  values: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  handleChange: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  handleBlur: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { routes } from 'routes';\nimport PropTypes from 'prop-types';\nimport CrudTemplate from 'templates/CrudTemplate';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport styled from 'styled-components';\nimport Input from 'components/atoms/Input/Input';\nimport Select from 'components/atoms/Select/Select';\nimport Button from 'components/atoms/Button/Button';\nimport { editItem as editItemAction } from 'actions';\nimport { Redirect, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst InputAddItem = styled(Input)`\n  margin: 6px 0;\n`;\n\nconst Back = styled(Link)`\n  justify-self: left;\n  align-self: center;\n  width: 50px;\n  height: 50px;\n  line-height: 67px;\n  font-weight: 300;\n  border-radius: 50%;\n  margin: 0;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 6px;\n`;\n\nconst HeaderTitle = styled.h2`\n  margin: 0;\n  margin-top: 108px;\n`;\n\nconst FormWrapper = styled(Form)`\n  padding-top: 15px;\n  display: grid;\n`;\n\nconst SubmitWrapper = styled.div`\n  text-align: right;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\nconst Submit = styled(Button)`\n  justify-self: right;\n  align-self: center;\n  height: 42px;\n  width: 246px;\n  font-size: 16px;\n  outline: none;\n`;\n\nconst Hiden = styled(InputAddItem)`\n  display: none;\n`;\n\nclass EditPage extends Component {\n  state = {\n    item: [''],\n    limited: '',\n    limitedRes: '',\n    redirectToPantry: false,\n  };\n\n  componentDidMount() {\n    const { match, data } = this.props;\n    const [pantryRes] = data.filter((item) => Number(item.id) === Number(match.params.id));\n    const limited = data.filter((item) => Number(item.quantity) < Number(item.limit) / 2);\n    this.setState(\n      {\n        limited,\n      },\n      () => {\n        const { limited: limit } = this.state;\n        const [limitedRes] = limit.splice(match.params.id, 1);\n        this.setState({ limitedRes });\n      },\n    );\n\n    const { limitedRes } = this.state;\n\n    switch (match.path) {\n      case routes.pantryEdit:\n        this.setState({ item: pantryRes });\n        break;\n      case routes.shoppingListEdit:\n        this.setState({\n          item: limitedRes,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  initValues = () => {\n    const { item, limitedRes } = this.state;\n    const { match } = this.props;\n\n    let res;\n\n    if (match.path === '/shopping-list/edit/:id') {\n      res = {\n        id: limitedRes.id,\n        name: limitedRes.name,\n        quantity: Number(limitedRes.quantity),\n        category: limitedRes.category,\n        limit: Number(limitedRes.limit),\n        j: limitedRes.j,\n      };\n    } else {\n      res = {\n        id: item.id,\n        name: item.name,\n        quantity: Number(item.quantity),\n        category: item.category,\n        limit: Number(item.limit),\n        j: item.j,\n      };\n    }\n    return res;\n  };\n\n  handleRedirect = () => {\n    this.setState({ redirectToPantry: true });\n  };\n\n  render() {\n    const { editItem } = this.props;\n    const { redirectToPantry } = this.state;\n\n    if (redirectToPantry === true) {\n      return <Redirect to=\"/pantry\" />;\n    }\n\n    return (\n      <>\n        <CrudTemplate>\n          <HeaderTitle>\n            <Icon icon={faEdit} size=\"1x\" />\n            Edit Item\n          </HeaderTitle>\n          <Formik\n            enableReinitialize\n            initialValues={this.initValues()}\n            onSubmit={(values, { setSubmitting }) => {\n              editItem(values);\n              setSubmitting(false);\n              this.handleRedirect();\n            }}\n          >\n            {({ values, handleChange, handleBlur, isSubmitting }) => (\n              <FormWrapper>\n                <Hiden\n                  type=\"text\"\n                  name=\"id\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.id || ''}\n                  disabled\n                  required\n                />\n                <InputAddItem\n                  type=\"text\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name || ''}\n                  required\n                />\n                <InputAddItem\n                  type=\"text\"\n                  name=\"quantity\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.quantity || ''}\n                  required\n                />\n                <InputAddItem\n                  type=\"text\"\n                  name=\"category\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.category || ''}\n                  required\n                />\n                <InputAddItem\n                  type=\"text\"\n                  name=\"limit\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.limit || ''}\n                  required\n                />\n                <Select\n                  name=\"j\"\n                  values={values.j}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n                <SubmitWrapper>\n                  <Back to=\"/\">\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n                  </Back>\n                  <Submit type=\"submit\" secondary={1} disabled={isSubmitting}>\n                    Submit\n                  </Submit>\n                </SubmitWrapper>\n              </FormWrapper>\n            )}\n          </Formik>\n        </CrudTemplate>\n      </>\n    );\n  }\n}\n\nEditPage.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string,\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      category: PropTypes.string,\n      limit: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    }),\n  ).isRequired,\n  editItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ data }) => ({ data });\nconst mapDispatchToProps = (dispatch) => ({\n  editItem: (item) => dispatch(editItemAction(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPage);\n","import React, { Component } from 'react';\nimport { routes } from 'routes';\nimport CrudTemplate from 'templates/CrudTemplate';\nimport Button from 'components/atoms/Button/Button';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeItem as removeItemAction } from 'actions';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst HeaderTitle = styled.h2`\n  margin: 0;\n  margin-top: 108px;\n`;\n\nconst Trigger = styled(Button)`\n  height: 42px;\n  width: 246px;\n  font-size: 16px;\n  line-height: 40px;\n  margin-right: 6px;\n  outline: none;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 6px;\n`;\n\nclass DeletePage extends Component {\n  state = {\n    page: 'pantry',\n    item: [],\n    limited: '',\n    limitedRes: '',\n  };\n\n  componentDidMount() {\n    const { match, data } = this.props;\n    const [pantryRes] = data.filter((item) => Number(item.id) === Number(match.params.id));\n    const limited = data.filter((item) => item.quantity < item.limit / 2);\n    this.setState(\n      {\n        limited,\n      },\n      () => {\n        const { limited: limit } = this.state;\n        const [limitedRes] = limit.splice(match.params.id, 1);\n        this.setState({ limitedRes });\n      },\n    );\n\n    const { limitedRes } = this.state;\n\n    switch (match.path) {\n      case routes.pantryDelete:\n        this.setState({ item: pantryRes });\n        break;\n      case routes.shoppingListDelete:\n        this.setState({\n          item: limitedRes,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { item, limitedRes } = this.state;\n    const { match, removeItem } = this.props;\n\n    return (\n      <>\n        <CrudTemplate>\n          <HeaderTitle>\n            <Icon icon={faTrashAlt} size=\"1x\" />\n            Delete Item\n          </HeaderTitle>\n          {match.path === routes.shoppingListDelete ? (\n            <>\n              <pre>\n                {limitedRes.name} {limitedRes.quantity} {limitedRes.category} {limitedRes.limit}\n              </pre>\n              <Trigger as={Link} to=\"/shopping-list\" onClick={() => removeItem(limitedRes.id)}>\n                Confirm\n              </Trigger>\n              <Trigger as={Link} to=\"/shopping-list\" secondary={1}>\n                Cancel\n              </Trigger>\n            </>\n          ) : (\n            <>\n              <pre>\n                {item.name} {item.quantity} {item.category} {item.limit}\n              </pre>\n              <Trigger as={Link} to=\"/pantry\" onClick={() => removeItem(item.id)}>\n                Confirm\n              </Trigger>\n              <Trigger as={Link} to=\"/pantry\" secondary={1}>\n                Cancel\n              </Trigger>\n            </>\n          )}\n        </CrudTemplate>\n      </>\n    );\n  }\n}\n\nDeletePage.defaultProps = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: null,\n      quantity: null,\n      category: null,\n      limit: null,\n    }),\n  ),\n};\n\nDeletePage.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string,\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      quantity: PropTypes.number,\n      category: PropTypes.string,\n      limit: PropTypes.number,\n    }),\n  ),\n  removeItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ data }) => ({ data });\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeItem: (id) => dispatch(removeItemAction(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeletePage);\n","import React, { Component } from 'react';\nimport CrudTemplate from 'templates/CrudTemplate';\nimport PropTypes from 'prop-types';\nimport Input from 'components/atoms/Input/Input';\nimport Button from 'components/atoms/Button/Button';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { addItem as addItemAction } from 'actions';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport Select from 'components/atoms/Select/Select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faFolderPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst Submit = styled(Button)`\n  justify-self: right;\n  align-self: center;\n  height: 42px;\n  width: 246px;\n  font-size: 16px;\n  outline: none;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 6px;\n  line-height: 67px;\n`;\n\nconst Back = styled(Link)`\n  justify-self: left;\n  align-self: center;\n  width: 50px;\n  height: 50px;\n  line-height: 67px;\n  font-weight: 300;\n  border-radius: 50%;\n  margin: 0;\n`;\n\nconst SubmitWrapper = styled.div`\n  text-align: right;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\nconst HeaderTitle = styled.h2`\n  margin: 0;\n  margin-top: 108px;\n`;\n\nconst FormWrapper = styled(Form)`\n  padding-top: 15px;\n  display: grid;\n`;\n\nconst InputAddItem = styled(Input)`\n  margin: 6px 0;\n`;\n\nconst Center = styled(CrudTemplate)`\n  text-align: center;\n`;\n\nclass AddPage extends Component {\n  state = {\n    redirectToPantry: false,\n  };\n\n  handleRedirect = () => {\n    this.setState({ redirectToPantry: true });\n  };\n\n  render() {\n    const { redirectToPantry } = this.state;\n    const { addItem } = this.props;\n\n    if (redirectToPantry === true) {\n      return <Redirect to=\"/pantry\" />;\n    }\n    return (\n      <>\n        <Center>\n          <HeaderTitle>\n            <Icon icon={faFolderPlus} size=\"1x\" />\n            Add Item\n          </HeaderTitle>\n          <Formik\n            initialValues={{ name: '', quantity: '', category: '', limit: '', j: '' }}\n            onSubmit={(values, { setSubmitting }) => {\n              addItem(values);\n              setSubmitting(false);\n              this.handleRedirect();\n            }}\n          >\n            {({ values, handleChange, handleBlur, isSubmitting }) => (\n              <FormWrapper>\n                <InputAddItem\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                  required\n                />\n                <InputAddItem\n                  type=\"text\"\n                  name=\"quantity\"\n                  placeholder=\"Quantity\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.quantity}\n                  required\n                />\n                <InputAddItem\n                  type=\"text\"\n                  name=\"category\"\n                  placeholder=\"Category\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.category}\n                  required\n                />\n                <InputAddItem\n                  type=\"text\"\n                  name=\"limit\"\n                  placeholder=\"Limit\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.limit}\n                  required\n                />\n                <Select\n                  name=\"j\"\n                  values={values.j}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n                <SubmitWrapper>\n                  <Back to=\"/\">\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n                  </Back>\n                  <Submit type=\"submit\" secondary={1} disabled={isSubmitting}>\n                    Submit\n                  </Submit>\n                </SubmitWrapper>\n              </FormWrapper>\n            )}\n          </Formik>\n        </Center>\n      </>\n    );\n  }\n}\n\nAddPage.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string,\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  addItem: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItemAction(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(AddPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { routes } from 'routes';\nimport store from 'store';\nimport MainTemplate from 'templates/MainTemplate';\nimport Pantry from 'views/Pantry';\nimport ShoppingList from 'views/ShoppingList';\nimport Settings from 'views/Settings';\nimport EditPage from 'views/EditPage';\nimport DeletePage from 'views/DeletePage';\nimport AddPage from 'views/AddPage';\n\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <HashRouter>\n          <MainTemplate>\n            <Switch>\n              <Route exact path={routes.home} render={() => <Redirect to={routes.pantry} />} />\n              <Route exact path={routes.pantry} component={Pantry} />\n              <Route exact path={routes.pantryEdit} component={EditPage} />\n              <Route exact path={routes.pantryDelete} component={DeletePage} />\n              <Route exact path={routes.shoppingList} component={ShoppingList} />\n              <Route exact path={routes.shoppingListEdit} component={EditPage} />\n              <Route exact path={routes.shoppingListDelete} component={DeletePage} />\n              <Route exact path={routes.settings} component={Settings} />\n              <Route exact path={routes.add} component={AddPage} />\n            </Switch>\n          </MainTemplate>\n        </HashRouter>\n      </Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'components/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}